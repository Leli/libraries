<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>mise.marssa</groupId>
	<artifactId>libraries</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>bundle</packaging>

	<name>MARSSA Libraries OSGi Bundle</name>
	<url>http://www.marsec-xl-projects.org/projects/libraries</url>
	<description>This project was created specifically to handle the libraries which are used by MARSSA. Some of these libraries are developed externally and others are developed as part of the MARSSA effort. The nature of the libraries in this project is generic in the sense that libraries developed internally as part of MARSSA can possible be used by other projects outside of MARSSA.</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<organization>
		<name>MI-SE@MALTA Foundation</name>
		<url>http://www.marsec-xl.org/</url>
	</organization>

	<scm>
		<url>git@github.com:marssa/libraries.git</url>
		<connection>ssh</connection>
		<developerConnection>Clayton Tabone, Warren Zahra, Amanda Fenech, Alan Grech</developerConnection>
	</scm>

	<issueManagement>
		<system>Redmine</system>
		<url>http://www.marsec-xl-projects.org/projects/libraries</url>
	</issueManagement>

	<!-- This stub section is only needed in older versions of Maven -->
	<distributionManagement>
		<repository>
			<id>repo</id>
			<url>https://raw.github.com/marssa/marssa-mvn-repo/master/releases</url>
		</repository>
		<snapshotRepository>
			<id>snapshot-repo</id>
			<url>https://raw.github.com/marssa/marssa-mvn-repo/master/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>hoegergroup-repo</id>
			<name>Repository on forge.hoegergroup.de</name>
			<url>http://maven.forge.hoegergroup.de/</url>
		</repository>
		<repository>
			<id>asterizmo.etl.luc.edu</id>
			<name>asterizmo.etl.luc.edu-releases</name>
			<url>http://maven.etl.luc.edu/artifactory/ext-releases-local</url>
		</repository>
		<repository>
			<id>maven-restlet</id>
			<name>Public online Restlet repository</name>
			<url>http://maven.restlet.org</url>
		</repository>
		<repository>
			<id>marssa-mvn-repo</id>
			<name>MARSSA Repository on github.com</name>
			<url>https://raw.github.com/marssa/marssa-mvn-repo/master/snapshots</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>1.4.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>de.taimos</groupId>
			<artifactId>gpsd4java</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>net.wimpi.modbus</groupId>
			<artifactId>jamod</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.restlet.jse</groupId>
			<artifactId>org.restlet</artifactId>
			<version>2.0.10</version>
		</dependency>
		<dependency>
			<groupId>mise.marssa</groupId>
			<artifactId>footprint</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.rxtx</groupId>
			<artifactId>rxtx</artifactId>
			<version>2.1.7</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.2.4-1</version>
		</dependency>
		<dependency>
			<groupId>net.sf</groupId>
			<artifactId>marineapi</artifactId>
			<version>0.5.137-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.2.0</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-Activator>mise.marssa.libraries.Activator</Bundle-Activator>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<altDeploymentRepository>footprint::default::file:../../git/marssa-mvn-repo/snapshots</altDeploymentRepository>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>build-for-felix</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.main</artifactId>
					<version>3.0.7</version>
					<scope>provided</scope>
				</dependency>
				<!-- To include a shell: <dependency> <groupId>org.apache.felix</groupId> 
					<artifactId>org.apache.felix.gogo.shell</artifactId> <version>0.6.1</version> 
					</dependency> -->
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>compile</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<pathconvert property="plugins.jars" pathsep="${path.separator}">
											<path refid="maven.runtime.classpath" />
											<map from="${project.build.directory}${file.separator}classes"
												to="" />
										</pathconvert>
										<pathconvert pathsep=" " property="bundles">
											<path path="${plugins.jars}" />
											<mapper>
												<chainedmapper>
													<flattenmapper />
													<globmapper from="*" to="file:modules/*"
														casesensitive="no" />
												</chainedmapper>
											</mapper>
										</pathconvert>
										<propertyfile file="${project.build.directory}/config.properties">
											<entry key="felix.auto.start"
												value="${bundles} file:modules/${project.build.finalName}.jar" />
											<entry key="org.osgi.framework.bootdelegation" value="*" />
										</propertyfile>
										<copy
											file="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}"
											tofile="${project.build.directory}/felix.jar" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.2</version>
						<executions>
							<execution>
								<id>create-executable-jar</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${basedir}/src/main/assembly/felix.xml</descriptor>
									</descriptors>
									<finalName>${project.build.finalName}</finalName>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>run-on-felix</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.main</artifactId>
					<version>3.0.7</version>
					<scope>provided</scope>
				</dependency>
				<!-- org.apache.felix:org.apache.felix.gogo.shell:0.6.1 useless from 
					Maven since stdin is swallowed -->
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<target>
								<property name="vm.args" value="" />
								<pathconvert property="plugins.jars" pathsep="${path.separator}">
									<path refid="maven.runtime.classpath" />
									<map from="${project.build.directory}${file.separator}classes"
										to="" />
								</pathconvert>
								<makeurl property="urls" separator=" ">
									<path path="${plugins.jars}" />
									<path
										location="${project.build.directory}/${project.build.finalName}.jar" />
								</makeurl>
								<propertyfile file="${project.build.directory}/run.properties">
									<entry key="felix.auto.start" value="${urls}" />
									<entry key="felix.auto.deploy.action" value="uninstall,install,update,start" />
									<entry key="org.osgi.framework.storage"
										value="${project.build.directory}${file.separator}felix-cache" />
									<entry key="org.osgi.framework.bootdelegation" value="*" />
								</propertyfile>
								<makeurl property="run.properties.url"
									file="${project.build.directory}/run.properties" />
								<java fork="true"
									jar="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}">
									<sysproperty key="felix.config.properties" value="${run.properties.url}" />
									<jvmarg line="${vm.args}" />
								</java>
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
